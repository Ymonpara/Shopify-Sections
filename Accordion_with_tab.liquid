{% assign padding_top = section.settings.padding_top %}
{% assign padding_left_right = section.settings.padding_left_right %}
{% assign padding_bottom = section.settings.padding_bottom %}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding: {{ padding_top | times: 0.75 | round: 0 }}px {{ padding_left_right | times: 0.75 | round: 0  }}px {{ padding_bottom | times: 0.75 | round: 0  }}px {{ padding_left_right | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding: {{ padding_top }}px {{ padding_left_right }}px {{ padding_bottom }}px {{ padding_left_right }}px;
    }
  }
{%- endstyle -%}
  <div class="section-{{ section.id }}-padding {{ section.settings.custom_class }}">
    <h1>accordion with jquery</h1>
    <div class="container">
      <ul class="tabs">
        {%- for block in section.blocks -%}
        {%- case block.type -%}
            {% when 'tab' %}
            <li class="tab tab-{{ forloop.index }} {% if forloop.first %}current{% endif %}" data-tab="{{ block.settings['tab-title'] | handle }}" >{{ block.settings['tab-title'] }}</li>
        {% endcase %}
        {%- endfor -%}
      </ul>

      <div class="tab-content">
        {%- for block in section.blocks -%}
        {%- case block.type -%}
            {% when 'dec' %}
            <div id="" class="tab-dec {{ block.settings['tab-id'] | handle }}" style="{% if forloop.first %}display:block;{% endif %}">
              {{ block.settings['tab-text'] }}
            </div>  
        {% endcase %}
        {%- endfor -%}
      </div>
  </div>
</div>
<style>
ul.tabs{
  margin: 0px;
  padding: 0px;
  list-style: none;
}
ul.tabs li{
  background: none;
  color: #222;
  display: inline-block;
  padding: 10px 15px;
  cursor: pointer;
}

ul.tabs li.current{
  background: #ededed;
  color: #222;
}

.tab-dec{
  display: none;
  background: #ededed;
  padding: 15px;
}

.tab-dec.current{
  display: inherit;
}
</style>

<script>
$(document).ready(function(){
    $('ul.tabs li').click(function(){
        var tab_id = $(this).attr('data-tab');
        $('ul.tabs li').removeClass('current');
        $('.tab-dec').removeClass('current');
        $(this).addClass('current');
        $("." + tab_id).addClass('current');
    })
    $('li.tab:first-child').click();
});

</script>

{% schema %}
{
"name": "Accordion",
"settings": [
      {
        "type": "text",
        "id": "custom_class",
        "label": "Custom Class"
      },
      {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 36
    },
      {
      "type": "range",
      "id": "padding_left_right",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Left Right",
      "default": 20
    }
],
"blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "tab-title",
          "default": "Text block",
          "label": "Tab Title"
        }
      ]
    },
    {
      "type": "dec",
      "name": "Content",
      "settings": [
        {
          "type": "text",
          "id": "tab-id",
          "label": "Tab selecter"
        },
        {
          "type": "richtext",
          "id": "tab-text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "Contect"
        }
      ]
    }  
  ],
"presets": [
{
"name": "Accordion"
}
]
}
{% endschema %}
