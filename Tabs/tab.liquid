{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.60 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.60 | round: 0 }}px;
  }

  @media screen and (min-width: 1199px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<div class="section-{{ section.id }}-padding">
  {%- unless section.settings.title == blank -%}
    <div class="title-wrapper {{ section.settings.title_alignment }} {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <h2 class="title inline-richtext">
        {{ section.settings.title }}
      </h2>
    </div>
  {%- endunless -%}
  <div class="container">
    <ul class="tabs">
      {%- for block in section.blocks -%}
        <li
          class="tab tab-{{ forloop.index }} {% if forloop.first %}current{% endif %}"
          data-tab="tab{{ forloop.index }}"
        >
          {{ block.settings['tab-title'] }}
        </li>
      {%- endfor -%}
    </ul>
    <div class="tab-content">
      {%- for block in section.blocks -%}
        <div
          data-tab-content="tab{{ forloop.index }}"
          class="tab-dec"
          style="{% if forloop.first %}display:block;{% endif %}"
        >
          {{ block.settings['tab-text'] }}
        </div>
      {%- endfor -%}
    </div>
  </div>

  <style>
    ul.tabs{
      overflow-x: hidden;
      margin: 0px;
      padding: 0px;
      list-style: none;
      display: flex;
      width: 100%;
        max-width: 100%;
    }
    ul.tabs li{
      background: none;
      color: #222;
      display: inline-block;
      padding: 10px 15px;
      cursor: pointer;
    }

    ul.tabs li.current{
      background: #ededed;
      color: #222;
    }

    .tab-dec {
      display: none;
      background: #ededed;
      padding: 15px;
    }
  </style>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabs = document.querySelectorAll('.tab');
    const tabContents = document.querySelectorAll('.tab-dec');
    tabs.forEach(tab => {
      tab.addEventListener('click', function () {
        const tabId = this.getAttribute('data-tab');
        tabs.forEach(t => {
          t.classList.remove('current');
        });
        tab.classList.add('current');
        tabContents.forEach(content => {
          content.style.display = 'none';
        });
        document.querySelector(`[data-tab-content="${tabId}"]`).style.display = 'block';
      });
    });
  });
</script>

{% schema %}
{
  "name": "Tab",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Heading",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "Title Alignment"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "accordion",
      "settings": [
        {
          "type": "text",
          "id": "tab-title",
          "default": "accordion",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "tab-text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "Contect"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab"
    }
  ]
}
{% endschema %}
